/**
 * This file auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments";
import * as core from "./core";
import { Client as ActivityLogClient } from "./resources/activityLog/client/Client";
import { Client as AuthClient } from "./resources/auth/client/Client";
import { Client as ProjectsClient } from "./resources/projects/client/Client";
import { Client as WorkplaceClient } from "./resources/workplace/client/Client";

export declare namespace DopplerApiClient {
  interface Options {
    environment?: environments.Environment | string;
    auth?: {
      credentials?: core.Supplier<core.BasicAuth>;
    };
  }
}

export class DopplerApiClient {
  constructor(private readonly options: DopplerApiClient.Options) {}

  #activityLog: ActivityLogClient | undefined;

  public get activityLog(): ActivityLogClient {
    return (this.#activityLog ??= new ActivityLogClient(this.options));
  }

  #auth: AuthClient | undefined;

  public get auth(): AuthClient {
    return (this.#auth ??= new AuthClient(this.options));
  }

  #projects: ProjectsClient | undefined;

  public get projects(): ProjectsClient {
    return (this.#projects ??= new ProjectsClient(this.options));
  }

  #workplace: WorkplaceClient | undefined;

  public get workplace(): WorkplaceClient {
    return (this.#workplace ??= new WorkplaceClient(this.options));
  }
}
